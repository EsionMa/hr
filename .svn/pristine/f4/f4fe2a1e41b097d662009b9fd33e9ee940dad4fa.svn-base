import axios from 'axios';
import qs from 'querystring';
import cg from '../configure.js';
var bp = cg.bp;
axios.defaults.headers.post['Content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';

export default {
	state:{
		circle:[],//
		toolsCircle:[],//
		pagesCircle:0,//分页
	},
	getters:{
		circle:state => state.circle,
		toolsCircle:state => state.toolsCircle,
		pagesCircle:state => state.pagesCircle,
	},
	mutations:{
		allCircle:(state,val) => {
			val[1].forEach(function(item,index){
				item.handler_status == 1 ? item.handler_status = '启用' : item.handler_status = '停用';
			});
			state.circle = val[1];
			state.toolsCircle = val[0];
			state.pagesCircle = (+val[2])*10;//?
		}
	},
	actions:{
		saveCircle:(context,form) => {
			return new Promise((resolve,reject)=>{
			//add:
				if(form.handler_id==undefined){//如果id不存在，执行添加。
					axios.post(bp+'/manager/add_handler',qs.stringify(form)).then((result)=>{
						context.dispatch('findAllCircle');//刷新。
						resolve(result);
					}).catch((error)=>{
						reject(error);
					});
			//update:
				}else{  //否则执行修改。
					axios.post(bp+'/manager/update_handler',qs.stringify(form)).then((result)=>{
						context.dispatch('findAllCircle');//刷新。
						resolve(result);
					}).catch((error)=>{
						reject(error);
					});
				}
			});
		},
		//find:
		findAllCircle:(context) => {
			axios.post(bp+'/manager/show_handler').then(({data})=>{
				context.commit('allCircle',data);
			});
		},
		//queryKeys:
		findCircle:(context,Circle) => {
			axios.post(bp+'/manager/show_handler',qs.stringify(Circle)).then(({data})=>{
				context.commit('allCircle',data);
			});
		},
		//delete:
		deleteByIdCircle:(context,ids) => {
			return new Promise((resolve,reject)=>{
				axios.post(bp+'/manager/delete_handler',qs.stringify(ids)).then((result)=>{
					context.dispatch('findAllCircle');//刷新。
					resolve(result);
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		//batchdelete:
		batchDeleteByIdCircle:(context,ids) => {
			return new Promise((resolve,reject)=>{
				axios.post(bp+'/manager/batch_delete_handler',qs.stringify(ids)).then((result)=>{
					context.dispatch('findAllCircle');//刷新。
					resolve(result);
				}).catch((error)=>{
					reject(error);
				});
			});
		},
		uploadCircle:(context,file) => {
			return new Promise((resolve,reject)=>{
				axios.post(bp+'/manager/handler_up',qs.stringify(file)).then((result)=>{
					context.dispatch('findAllCircle');//刷新。
					resolve(result);
				}).catch((error)=>{
					reject(error);
				});
			});
		},
	}
}


