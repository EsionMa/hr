<!-- 教师用户  -->
<template>
	<div class="teacher">
		<el-row class='rowTop'>
			<el-col :span='14'>
				<el-form inline :model='tch' size='mini'>
          <el-row>
            <el-col :span='6'>
              <el-form-item>
                <el-input v-model='tch.keys' placeholder='请输入关键字'></el-input>
              </el-form-item>
            </el-col>
            <el-col :span='6'>
              <el-form-item>
                <el-button type='info' size='small' @click='query' class="search"><i class="fa fa-search"></i>&nbsp;查询</el-button>
              </el-form-item>
            </el-col>
          </el-row>
				</el-form>
			</el-col>
			<el-col :span='10'>
				<el-row type='flex' justify='end'>
          <el-form inline size='mini'>
            <el-col :span='8'>
              <el-form-item class='but'>
                <el-button type='info' size='small' @click='single2' class="add"><!-- <i class="fa fa-plus"></i> -->新增教师</el-button>
              </el-form-item>
            </el-col>
            <el-col :span='8'>
              <el-form-item class='but'>
                <el-button type='info' size='small' @click='admin2' class="edit"><!-- <i class="fa fa-cog"></i> -->用户授权</el-button>
              </el-form-item>
            </el-col>
            <el-col :span='8'>
              <el-form-item class='but'>
                <el-button type='info' size='small' @click='batch2' class="adds"><!-- <i class="fa fa-plus-circle"></i> -->批量导入</el-button>
              </el-form-item>
            </el-col>
          </el-form>
				</el-row>
			</el-col>
		</el-row>
    <el-table :data="teachers" style="width: 100%" class='table' border stripe :header-row-style="rowClass" size='mini' @selection-change="selectArr" align='center'>
      <el-table-column type="selection" align='center'></el-table-column>
      <el-table-column type="index" label='序号' align='center'></el-table-column>
      <el-table-column prop="teach_id" label="teach_id" v-if='false' align='center'></el-table-column>
      <el-table-column prop="teach_name" label="姓名" align='center'></el-table-column>
      <el-table-column prop="teach_passwd" label="密码" v-if='false' align='center'></el-table-column>
      <el-table-column prop="teach_account" label="教师帐号" align='center'></el-table-column>
      <el-table-column prop="teach_tel" label="手机号码" align='center'></el-table-column>
      <el-table-column prop="teach_gender" label="性别" align='center'></el-table-column>
      <el-table-column prop="teach_status" label="启用状态" align='center'></el-table-column>
      <el-table-column label="操作" align='center' width='120' >
        <template slot-scope='scope'>
          <i class="icon el-icon-edit" @click="edit2(scope.$index, scope.row)"></i>
	        <i class="icon el-icon-delete" @click="delete2(scope.$index, scope.row)"></i>
        </template>
      </el-table-column>
    </el-table>
    <div class="block" :hidden='hideTeach'>
      <el-pagination @current-change="currentChangeTeach"
        layout="prev, pager, next"
        :total="pageTeach">
      </el-pagination>
    </div>

    <el-dialog :title="title2" :visible.sync="visible2" center>
      <el-form :model="form2" :rules='rules' class='demo-ruleForm dialog' ref='form2' size='mini'>
        <!-- <el-form-item label="序号" :label-width="fw">
          <el-input v-model="form2.no" auto-complete="off"></el-input>
        </el-form-item> -->
        <el-form-item label="教师姓名" :label-width="fw" prop='teach_name'>
          <el-input v-model="form2.teach_name" auto-complete="off"></el-input>
        </el-form-item>
        <el-form-item label="教师帐号" :label-width="fw" prop='teach_account'>
          <el-input v-model="form2.teach_account" auto-complete="off"></el-input>
        </el-form-item>
        <el-form-item label="登录密码" :label-width="fw" prop='teach_passwd'>
          <el-input type='password' v-model="form2.teach_passwd" auto-complete="off"></el-input>
        </el-form-item>
        <el-form-item label="手机号码" :label-width="fw" prop='teach_tel'>
          <el-input v-model="form2.teach_tel" auto-complete="off"></el-input>
        </el-form-item>
        <el-form-item label="性别" :label-width="fw" prop='teach_gender'>
          <el-radio-group v-model="form2.teach_gender">
            <el-radio label="男">男</el-radio>
            <el-radio label="女">女</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="启用状态" :label-width="fw" prop='teach_status'>
          <el-radio-group v-model="form2.teach_status">
            <el-radio label="启用">启用</el-radio>
            <el-radio label="停用">停用</el-radio>
          </el-radio-group>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="cancle2" size='mini'>取 消</el-button>
        <el-button type="info" @click="submit2('form2')" class="yes" size='mini'>确 定</el-button>
      </div>
    </el-dialog>

    <el-dialog :title="title2s" :visible.sync="visible2s" center>
    <!--
      <el-row>
        <el-col :span="18" :offset="4">
           <el-upload class="upload-demo" ref="upload" center
            action="https://jsonplaceholder.typicode.com/posts/" :show-file-list="false" :on-preview="handlePreview" :on-remove="handleRemove" :file-list="fileList" :auto-upload="false" :on-change="handleChange">
              <el-input style="width:420px" slot="trigger" v-model="filename" size="small" type="info" placeholder="选取文件">选取文件</el-input>
          </el-upload> 
        </el-col>
      </el-row>
    -->
      <el-form :model="form2s" class='dialog3' size='mini'>
        <el-row>
          <el-col :span='6'>
            <el-form-item label="">
              <el-row type='flex' justify='end'>
                <el-button type='info' size='mini' @click='downloadTeach' class="download">下载模版</el-button>
              </el-row>
            </el-form-item>
          </el-col>
          <el-col :span='18'>
            <el-form-item label="">
              <el-input style="width:90%" v-model="filename" placeholder="手环批量导入：文件上传"></el-input>
              <form :action="teachUpUrl" method="post" enctype="multipart/form-data" target='iframe_display' style='position:relative; opacity:0;'>
                <iframe name="iframe_display" style="display:none;"></iframe>   
                <input type="file" id='file' name="excelData" style='position:absolute;top:-30px;left:0; width:90%' value='' @change='changeFileTeacher' />
                <input type="submit" id='submit' value="" style='position:absolute;top:88px;left:-166px;' />
              </form>
            </el-form-item>
          </el-col>
        </el-row>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="cancle2s" size='mini'>取 消</el-button>
        <el-button type="info" @click="submit2s" class="adds" size='mini'>导 入</el-button>
      </div>
    </el-dialog> 

    <el-dialog :title="titleAdmin" :visible.sync="visibleAdmin" center>
      <el-form :model="formAdmin">
        <!-- <template v-for='item,i in admin'>
          <el-checkbox :indeterminate="isIndeterminate2[i]" v-model="checkAll2[i]" @change="adminTeach2(checkAll2[i],i)" :label='item.module_id' :key='item.module_id'>{{item.module_name}}</el-checkbox>
          <div style="margin: 15px 0;"></div>
          <el-checkbox-group v-model="checkedTeacher2[i]" @change="dataTeacher2(checkedTeacher2[i],i)">
            <b></b><el-checkbox v-for="t2 in item.module_level2,Teacher2[i]=item.module_level2" :label="t2.module_id" :key="t2.module_id">{{t2.module_name}}</el-checkbox><hr color='#eee'>
          </el-checkbox-group>
        </template> -->
        <template>
          <el-checkbox :indeterminate="isIndeterminate1" v-model="checkAllAdmin1" @change="checkAllMethods1(checkAllAdmin1)">{{teacherAdmin[0].module_name}}</el-checkbox>
          <div style="margin:15px 0;"></div>
          <el-checkbox-group v-model="checkAdminList1" @change="checkListMethods1(checkAdminList1)">
            <div v-for="a in teacherAdmin[0].module_level2" style='text-align:left;'>
              <a></a><el-checkbox :label="a.module_id" :key="a.module_id">{{a.module_name}}</el-checkbox>
            </div>
          </el-checkbox-group>
        </template>
        <template>
          <el-checkbox :indeterminate="isIndeterminate2" v-model="checkAllAdmin2" @change="checkAllMethods2(checkAllAdmin2)">{{teacherAdmin[1].module_name}}</el-checkbox>
          <div style="margin:15px 0;"></div>
          <el-checkbox-group v-model="checkAdminList2" @change="checkListMethods2(checkAdminList2)">
            <div v-for="a in teacherAdmin[1].module_level2" style='text-align:left;'>
              <a></a><el-checkbox :label="a.module_id" :key="a.module_id">{{a.module_name}}</el-checkbox>
            </div>
          </el-checkbox-group>
        </template>
        <template>
          <el-checkbox :indeterminate="isIndeterminate3" v-model="checkAllAdmin3" @change="checkAllMethods3">{{teacherAdmin[2].module_name}}</el-checkbox>
          <div style="margin:15px 0;"></div>
          <el-checkbox-group v-model="checkAdminList3" @change="checkListMethods3">
            <div v-for="a in teacherAdmin[2].module_level2" style='text-align:left;'>
              <a></a><el-checkbox :label="a.module_id" :key="a.module_id">{{a.module_name}}</el-checkbox>
            </div>
          </el-checkbox-group>
        </template>
      </el-form>
      <div slot="footer" class="dialog-footer">
         <el-button @click="cancleAdmin" size='mini'>取 消</el-button>
         <el-button type="info" @click="submitAdmin" class="yes" size='mini'>确 定</el-button>
      </div>
    </el-dialog>  
	</div>
</template>

<script>
import {mapActions,mapGetters} from 'vuex';
import cg from '../../../store/configure.js';
var bp = cg.bp; 

export default {
  name: 'teacher',
  data(){
    return {
      fw:'120px',
    	tch:{},
      title2:'教师用户',
      title2s:'批量添加教师用户',
      titleAdmin:'用户授权',
      teachUpUrl:bp+'/manager/teacher_up',
      form2:{},
      form2s:{},
      formAdmin:{},
      visible2:false,
      visible2s:false,
      visibleAdmin:false,
      /*checkAll2:[],//父权限的选中情况boolean。
      checkedTeacher2:[],//某父权限下子权限的选中列表。
      Teacher2:[],//某父权限下所有子权限列表。
      isIndeterminate2:[],//开启checkbox的不确定状态。*/
      checkAdminList1:[],
      childAdmin1:[],
      checkAllAdmin1:false,
      isIndeterminate1:false,

      checkAdminList2:[],
      childAdmin2:[21,22,23],
      checkAllAdmin2:false,
      isIndeterminate2:false,

      checkAdminList3:[],
      childAdmin3:[31,32,33,34,35],
      checkAllAdmin3:false,
      isIndeterminate3:false,

      filename:'',
      selectTeacher:[],//选中教师的id列表。
      rules:{
        teach_name:[
          {required:true,message:'请输入姓名',trigger: 'blur'},
        ],
        teach_account:[
          {required:true,message:'请输入帐号',trigger: 'blur'},
        ],
        teach_passwd:[
          {required:true,message:'请输入密码',trigger: 'blur'},
        ],
        teach_tel:[
          {min:11,max:11,message:'长度为11位',trigger: 'blur'},
        ],
        teach_gender:[
          {required:true,message:'请选择性别',trigger: 'change'},
        ],
        teach_status:[
          {required:true,message:'请选择启用状态',trigger: 'change'},
        ],
      }, 
      teachers:[{
        teach_id:1,
        teach_name:'hwj',
      },{
        teach_id:2,
        teach_name:'hwj2',
      }], 
      teacherAdmin:[{
        module_id:1,
        module_name:'实时监测',
        module_level2:[],
      },{
        module_id:2,
        module_name:'数据报表',
        module_level2:[{
          module_id:21,
          module_name:'班级曲线报表',
        },{
          module_id:22,
          module_name:'班级数据报表',
        },{
          module_id:23,
          module_name:'异常报表',
        }],
      },{
        module_id:3,
        module_name:'平台设置',
        module_level2:[{
          module_id:31,
          module_name:'单位信息',
        },{
          module_id:32,
          module_name:'用户管理',
        },{
          module_id:33,
          module_name:'课表管理',
        },{
          module_id:34,
          module_name:'默认心率设置',
        },{
          module_id:35,
          module_name:'手环工具箱',
        }],
      }],
    }
  },
  created(){
    this.findAllTch();
  },
  mounted(){
    
  },
  computed:{
    ...mapGetters([/*'teachers',*/'pageTeach',/*'teacherAdmin',*/'hideTeach']),
  },
  methods:{
    checkAllMethods1(val){
      this.checkAdminList1 = val ? this.childAdmin1 : [];
      this.isIndeterminate1 = false;
    },
    checkListMethods1(value){
      let len = value.length;
      this.checkAllAdmin1 = len === this.childAdmin1.length;
      this.isIndeterminate1 = len > 0 && len < this.childAdmin1.length;
    },
    checkAllMethods2(val){
      this.checkAdminList2 = val ? this.childAdmin2 : [];
      this.isIndeterminate2 = false;
    },
    checkListMethods2(value){
      let len = value.length;
      this.checkAllAdmin2 = len === this.childAdmin2.length;
      this.isIndeterminate2 = len > 0 && len < this.childAdmin2.length;
    },
    checkAllMethods3(val){
      this.checkAdminList3 = val ? this.childAdmin3 : [];
      console.log(this.checkAdminList3)
      this.isIndeterminate3 = false;
    },
    checkListMethods3(value){
      let len = value.length;
      this.checkAllAdmin3 = len === this.childAdmin3.length;
      this.isIndeterminate3 = len > 0 && len < this.childAdmin3.length;
    },
    selectArr(val){
      this.selectTeacher = [];//清空，避免累加。
      for(var i=0;i<val.length;i++){
        this.selectTeacher.push(val[i].teach_id);
      }
    },
  //分页：
    currentChangeTeach(val){
      this.tch.page = val;
      this.queryTeach(this.tch).then((result)=>{
        
      }).catch((error)=>{
        console.log('教师页面分页操作失败，后台报错'+error);
      });
    },
    downloadTeach(){//下载模版。
    //跳转到下载地址：
      window.location.href = bp+'/manager/teacher_download';
    },
    changeFileTeacher(){//当用户选择文件时。
      this.filename = $('#file').val();
    },
    edit2(i,row){
      this.visible2=true;
      this.title2='教师信息修改';
      this.form2 = row;
      this.form2.teach_passwd = '      ';
    },
    delete2(i,row){
      this.$confirm('此操作将永久删除该条数据，是否继续?','提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        this.deleteByIdTch({teach_id:row.teach_id}).then((result)=>{
          if(result.data.code == 200){
            this.$notify({
              title:'成功',
              type: 'success',
              message: '教师信息删除成功',
            });
          }else{
            console.log('教师信息删除失败，后台返回状态码：'+result.data.code);
          }
        }).catch((error)=>{
          console.log('教师信息删除失败，后台报错！-->'+error);
        });
      }).catch(() => {
        this.$notify({
          type: 'info',
          message: '已取消删除',
        });          
      });
    },
    single2(){
      this.visible2=true;
      this.title2='单个新增教师';
      this.form2={teach_gender:'女',teach_status:'启用'};
    },
    batch2(){
      this.visible2s=true;
      this.filename='';//清空输入框用户选择的文件。
    },
    admin2(){
      if(this.selectTeacher.length > 0){//不选老师不弹。
        this.visibleAdmin=true;
        this.titleAdmin='用户授权';
      //清空（恢复原样）：
        this.checkAdminList1=[];
        this.checkAllAdmin1=false;
        this.isIndeterminate1=false;
        this.checkAdminList2=[];
        this.checkAllAdmin2=false;
        this.isIndeterminate2=false;
        this.checkAdminList3=[];
        this.checkAllAdmin3=false;
        this.isIndeterminate3=false;
      }else{
        this.$notify({
          type: 'warning',
          message: '请先选择教师！'
        });
      }
    },
    submit2(formName){
      var flag = 0;
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.saveTch(this.form2).then((result)=>{
            if(result.data.code == 200){
              this.$notify({
                title:'成功',
                type: 'success',
                message: '操作成功',
              });
              flag = 0;
            }else if(result.data.code == 300){
              this.$notify({
                type: 'error',
                message: '请求失败，该帐号已经存在，请输入新帐号！',
              });
              flag = 1;
            }else{
              console.log('教师信息操作失败，后台返回状态码：'+result.data.code);
              flag = 0;
            }
            if(flag == 0){
              this.visible2=false;
            }
          }).catch((error)=>{
            console.log('教师信息操作失败，后台报错！-->'+error);
            flag = 0;
            this.visible2=false;
          });
        } else {
          console.log('error submit!!');
          return false;
        }
      });  
    },
    submit2s(){
    /*  this.$refs.upload.submit();
      this.saveTch(this.form2).then((result)=>{
        if(result.data.code == 200){
          this.$message({
            type: 'success',
            message: '批量操作成功',
          });
        }else{
          this.$message({
            type: 'error',
            message: '批量操作失败',
          });
        }
      }).catch((error)=>{
        this.$message({
          type: 'error',
          message: '批量操作失败'
        });
      });*/
      $('#submit').trigger('click');
      this.visible2s=false;
      this.$notify({
        title:'成功',
        type: 'success',
        message: '批量导入成功！'
      });
      // this.findAllTch();//刷新
      //控制路由进行刷新
      var vm = this;
      setTimeout(function(){
        vm.$router.push('/settings/users/student');
        setTimeout(function(){
          vm.$router.push('/settings/users/teacher');
        },100);
      },100);
    },
    submitAdmin(){
      var arr1 = this.selectTeacher;
      var arr2 = [];
      /*for(var i=0;i<this.checkedTeacher2.length;i++){
        for(var j=0;j<this.checkedTeacher2[i].length;j++){
          arr2.push(this.checkedTeacher2[i][j])
        }
      }*/
      for(var i=0;i<this.checkAdminList1.length;i++){
        arr2.push(this.checkAdminList1[i]);
      }
      for(var i=0;i<this.checkAdminList2.length;i++){
        arr2.push(this.checkAdminList2[i]);
      }
      for(var i=0;i<this.checkAdminList3.length;i++){
        arr2.push(this.checkAdminList3[i]);
      }
      var teach = dd(arr1);
      var admin = dd(arr2);
      var idsAdmin = teach + '#' + admin;
      console.log(idsAdmin);
    //拼接：
      function dd(a){
        var s = '';
        for(var i=0;i<a.length;i++){
          if(i == a.length-1){
            s += a[i];
          }else{
            s += (a[i]+'@');
          }
        }
        return s;
      }
      this.grantTch(idsAdmin).then((result)=>{
        this.$notify({
          title:'成功',
          type: 'success',
          message: '用户授权成功',
        });
      }).catch((error)=>{
        console.log('用户授权失败，后台报错！-->'+error);
      });
      this.visibleAdmin=false;
    },
    cancle2(){this.visible2=false;},
    cancle2s(){this.visible2s=false;},
    cancleAdmin(){this.visibleAdmin=false;},
    rowClass(row, index) {
      return {"background-color":"#E6EBF5",'color':'#878D99'}
    },
    query(){
      this.findTch(this.tch).then((result)=>{}).catch((error)=>{
        console.log('教师信息查询失败，后台报错！-->'+error);
      });
    },
    /*adminTeach2(bool,i) {//直接点击父权限
      var arr = this.checkedTeacher2[i];
      this.checkAll2[i] == bool;
      if(bool==true){
        for(var j=0;j<this.Teacher2[i].length;j++){
          arr.push(this.Teacher2[i][j].module_id);
        }
      }else{
        arr = [];
      }
      this.isIndeterminate2[i] = false;//只要点击父权限，则肯定不用checkbox的不确定状态。
    },
    dataTeacher2(value,i) {//点击某父权限下的子权限。
      let len = value.length;
      this.checkAll2[i] = len === this.Teacher2[i].length;
      this.isIndeterminate2[i] = len > 0 && len < this.Teacher2[i].length;//介于0~length，开启不确定状态。
    },*/
   /* handleRemove(file, fileList) {
      console.log(file, fileList);
    },
    handleChange(file, fileList){
      this.filename=file.name;
    },
    handlePreview(file) {
      console.log(file);
    },*/
    ...mapActions(['findAllTch','saveTch','deleteByIdTch','findTch','queryTeach','grantTch']),
  }
}
</script>

<style scoped>
  *{
    font-size:12px;
  }
  .icon {
		cursor: pointer;
		font-size: 18px;
	}
  .table{
    overflow:auto;
  }
  .dialog .el-input{
    width:86%;
  }
  .dialog-footer{
    text-align:right;
  }
  a{
    display:inline-block;
    width:50px;
  }
  b{
    display:inline-block;
    width:50px;
  }
  .rowTop .el-form .el-form-item{
    margin-top:-3px;
    margin-bottom:11px;
  }
  .rowTop .but{
    margin-right:0;
    margin-left:8px;
  }
  .add{ margin-top:-2px;
    background: #448db8;
    border:none;
  }
  .search{
    background: #448db8;
    border:none;
  }
  .adds{
     margin-top:-2px;
    background: #448db8;
    border:none;
  }
  .yes{
    background: #448db8;
    border:none;
  }
  .download{
    border:none;
    background: #448db8;
    border-radius: 0;
    margin-top: 2px;
    margin-left: 3px;
  }
  .edit{
     margin-top:-2px;
    background: #448db8;
    border:none;
  }
</style>